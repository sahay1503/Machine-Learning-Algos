import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

iris = load_iris()
print(iris.feature_names)
print(iris.target_names)

X, y = iris.data, iris.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
print(X_train.shape)
print(X_test.shape)

clf = DecisionTreeClassifier(criterion='gini', # {“gini”, “entropy”, “log_loss”}
                             splitter='best', # {“best”, “random”}
                             max_depth=None,
                             min_samples_split=2,
                             min_samples_leaf=1,
                             max_leaf_nodes=None,
                             min_impurity_decrease=0.0)
clf = clf.fit(X_train, y_train)

clf.predict(X_test[:5])

clf.predict_proba(X_test[:5])

clf.score(X_test, y_test)

from sklearn import tree
print(tree.plot_tree(clf, filled=True, rounded=True))

import graphviz
dot_data = tree.export_graphviz(clf, out_file=None,
                                feature_names=iris.feature_names,
                                class_names=iris.target_names,
                                filled=True, rounded=True,
                                special_characters=True)
graph = graphviz.Source(dot_data)

graph
